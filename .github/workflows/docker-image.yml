name: CI

on:
  push:
    branches: [master]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ '*' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://git.io/codeql-language-support
  

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # # Initializes the CodeQL tools for scanning.
    # - name: Initialize CodeQL
    #   uses: github/codeql-action/init@v1
    #   with:
    #     languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    # - name: Autobuild
    #   uses: github/codeql-action/autobuild@v1

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö https://git.io/JvXDl

    # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language

    #- run: |
    #   make bootstrap
    #   make release

    # - name: Perform CodeQL Analysis
    #   uses: github/codeql-action/analyze@v1

  directories: # Job that list subdirectories
    runs-on: ubuntu-latest
    outputs:
      dir: ${{ steps.set-dirs.outputs.dir }} # generate output name direc by using inner step output

    
    steps:
      - uses: actions/checkout@v2
      - id: set-dirs # Give it an id to handle to get step outputs in the outputs key above
        run: echo "::set-output name=dir::$(ls -d * | jq -R -s -c 'split("\n")[:-1]')"
        
        # Define step output named dir base on ls command transformed to JSON thanks to jq
  loop:
    runs-on: ubuntu-latest
    needs: [directories] # Depends on previous job
    strategy:
      matrix:
        dir: ${{fromJson(needs.directories.outputs.dir)}} # List matrix strategy from directories dynamically
   
    steps:
      - run: echo ${{matrix.dir}}   
      - uses: actions/checkout@v2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}


    
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
      
      - name: docker login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD 
          
      - name: Branch name
        run: echo running on branch ${GITHUB_REF##*/}

      - name: Scan current project
        uses: anchore/scan-action@v2
        with:
          path: "."
    
      - name: Do something with the matrix value
        working-directory: ${{ matrix.dir }}
        if: ${{ matrix.dir != 'weather.py' }}
        run: docker build -t ${{secrets.DOCKER_USER}}/scrap:${GITHUB_REF##*/} .

      - name: Scan current project
        uses: anchore/scan-action@v2
        with:
          path: "."

      - name: Docker Push
        if: ${{ matrix.dir != 'weather.py' }}
        run: docker push kunalk07/scrap:${GITHUB_REF##*/}
